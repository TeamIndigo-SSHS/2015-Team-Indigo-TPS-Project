#include <windows.h>
HINSTANCE g_hInst; 
                       
LRESULT CALLBACK WndProc(HWND, UINT, WPARAM, LPARAM);
int APIENTRY WinMain( HINSTANCE hInstance,
                      HINSTANCE hPrevInstance,
                      LPTSTR lpCmdLine, 
                      int nCmdShow)
{
	static TCHAR szClassName[]  = L"Hello";
	static TCHAR szTitle[] = L"æ»≥Á«œººø‰!";
	
	MSG			msg;
	HWND		hWnd;
	WNDCLASSEX	wc;
	g_hInst=hInstance;

	wc.cbSize=sizeof(WNDCLASSEX); 
	wc.style         = CS_HREDRAW | CS_VREDRAW;

	wc.lpfnWndProc   = WndProc;
	wc.cbClsExtra    = 0;
	wc.cbWndExtra    = 0;
	wc.hInstance     = hInstance;
	wc.hIcon         = LoadIcon(NULL,IDI_APPLICATION);
	wc.hCursor       = LoadCursor(NULL,IDC_ARROW);
	wc.hbrBackground=(HBRUSH)GetStockObject(WHITE_BRUSH); 
	wc.lpszMenuName  = NULL;                  
	wc.lpszClassName = szClassName;   
	wc.hIconSm=LoadIcon(NULL,IDI_APPLICATION);
	
	
	RegisterClassEx(&wc);
	  
	hWnd = CreateWindow( 
	            szClassName,
	            szTitle,
				WS_OVERLAPPEDWINDOW,
	            CW_USEDEFAULT,
	            CW_USEDEFAULT,
	            CW_USEDEFAULT,
	            CW_USEDEFAULT,
	            NULL,
	            NULL,
	            hInstance,
	            NULL
				);
	
	if ( !hWnd )
		return( FALSE );
	
	ShowWindow(hWnd, nCmdShow);
	UpdateWindow(hWnd);
	
	
	while( GetMessage( &msg, NULL, 0, 0) )   
	{
		TranslateMessage( &msg );
		DispatchMessage( &msg );
	}
	return msg.wParam;
}

LRESULT CALLBACK WndProc(HWND hWnd, UINT uMsg,WPARAM wParam, LPARAM lParam)
{
	switch ( uMsg ) 
	{
	case WM_LBUTTONDOWN:
		MessageBox(hWnd, L"Pressed Mouse Left",L"Mouse Test", MB_OK);
		break;
	case WM_DESTROY:
		PostQuitMessage(0);
		break;

	default:
		return DefWindowProc( hWnd, uMsg, wParam, lParam );    
	}
	return 0;
}
